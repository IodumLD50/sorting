# Coktail sort
# Shuffle sort
# Сортировка перемешиванием
# Шейкерная сортировка 
# Двунаправленная сортировка
''' +
    справляется большим колличеством данных чем ПУЗЫРЁК
    -
    сложнее написание'''

import random

n =50000
arr = list()
for i in range(n):
    number = random.randint(1, 100)
    arr.append(number)
    
print('Not sorted: ')
print(arr)
print('-----------')

###########################################################    
# необходимо обозначить конци списка
left_index = 0 # левый (шндекс) конец 
right_index = n - 1 # правый (шндекс) конец  (n -1  изза индыксации '01234.....n')
while left_index <= right_index: #
    for i in range(left_index, right_index, +1): # От левого индекса к правому с шагом +1
        left = arr[i] # левый элемент 
        # как в пузырьке 
        right = arr[i + 1] # правый элемент
        # !!! > сортировка от МЕНЬШЕГО к большему
        # !!! < сортировка от БОЛЬШЕГО к меньшему
        if left > right: # если левый больше чем правый, то меняем их местами
           arr[i] = right # на место левого элемента записываем правый
           arr[i + 1] = left  # на место правого элемента записываем левый
    # после того как мы переместили всё в ЛЕВО, можем уменьшать
    right_index -= 1
    # print(arr)
    # Делаем точно также только от ПРАВОГО индекса к ЛЕВОМУ
    for i in range(right_index, left_index, +1): # От ПРАВОГО индекса к ЛЕВОМУ с шагом -1
        right = arr[i] # Правый элемент 
        # как в пузырьке 
        left = arr[i - 1] # Левый элемент
        # !!! > сортировка от МЕНЬШЕГО к большему
        # !!! < сортировка от БОЛЬШЕГО к меньшему
        if left > right: # если левый больше чем правый, то меняем их местами
           arr[i] = left # на место правого элемента записываем левый
           arr[i - 1] = right  # на место левого элемента записываем правый
    left_index += 1
    # print(arr)
###########################################################

print('Sorted:')
print(arr)